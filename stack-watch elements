#include <stdio.h>
#include <stdlib.h>


struct stack{
    int size;
    int top;
    int * arr;
};


int isEmpty(struct stack *p){
    if(p->top<0){
        return 1;
    }else{
        return 0;
    }
}

int isFull(struct stack* p){
    if(p->top==p->size-1){
        return 1;
    }else{
        return 0;
    }
}
void push(struct stack *p,int value){
    if(isFull(p)){
        printf("Stack verflow");
    }
    else{
        p->top++;
        p->arr[p->top]=value;
    }
}

int pop(struct stack *top){
    if(isEmpty(top)){
        printf("Stack underflow , cannot remove elements");
    }else{
        int value=top->arr[top->top];
        top->top--;
    }

}

void check(struct stack *sp){
    if(isEmpty(sp)){
        printf("The stack is empty\n");
    }else{
        printf("The stack is not empty\n");
    }
}

void watchelements(struct stack *s){
    for(int i=0;i<=s->top;i--){
        printf("Element : %d\n",s->arr[s->top]);
        s->top--;
        if(s->top<0){
            break;
        }
        continue;
    }
}






int main(int argc, char const *argv[])
{
    struct stack* sp=(struct stack*)malloc(sizeof(struct stack));
    sp->size=100;
    sp->top=-1;
    sp->arr=(int*)malloc(sp->size*sizeof(int));

    push(sp,67);

    /*if(isEmpty(sp)){
        printf("The stack is empty\n");
    }else{
        printf("The stack is not empty\n");
    }*/

    push(sp,76);
    check(sp);

    //pop(sp);
    //pop(sp);
    //check(sp);
    //watchelements(sp);
    push(sp,65);
    push(sp,54);
    watchelements(sp);
   /*printf("the :%d\n",sp->arr[sp->top]);
   sp->top--;
   printf("the2 : %d\n",sp->arr[sp->top]);*/



    /* code */
    return 0;
}

